/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class func4j_special_Trigonometric */

#ifndef _Included_func4j_special_Trigonometric
#define _Included_func4j_special_Trigonometric
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     func4j_special_Trigonometric
 * Method:    sin
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_sin__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    cos
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_cos__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    hypot
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_hypot
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    sinc
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_sinc
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    sinc2
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_sinc2
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    sin
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_sin__DD
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    cos
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_cos__DD
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    logsin
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_logsin
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    lnsinh
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_lnsinh
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    lncosh
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_lncosh
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    polarToRect
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_polarToRect
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    rectToPolar
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_rectToPolar
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    angleRestrictSymm
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_angleRestrictSymm
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    angleRestrictPos
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_func4j_special_Trigonometric_angleRestrictPos
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    sinErr
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_sinErr
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     func4j_special_Trigonometric
 * Method:    cosErr
 * Signature: (DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_func4j_special_Trigonometric_cosErr
  (JNIEnv *, jclass, jdouble, jdouble);

#ifdef __cplusplus
}
#endif
#endif
