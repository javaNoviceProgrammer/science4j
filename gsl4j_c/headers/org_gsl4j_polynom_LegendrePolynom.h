/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_gsl4j_polynom_LegendrePolynom */

#ifndef _Included_org_gsl4j_polynom_LegendrePolynom
#define _Included_org_gsl4j_polynom_LegendrePolynom
#ifdef __cplusplus
extern "C" {
#endif
#undef org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_NONE
#define org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_NONE 0L
#undef org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_SCHMIDT
#define org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_SCHMIDT 1L
#undef org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_SPHARM
#define org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_SPHARM 2L
#undef org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_FULL
#define org_gsl4j_polynom_LegendrePolynom_GSL_SF_LEGENDRE_FULL 3L
/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreP1
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreP1
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreP2
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreP2
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreP3
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreP3
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendrePl
 * Signature: (ID)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendrePl
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendrePlArray
 * Signature: (ID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendrePlArray
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendrePlDerivArray
 * Signature: (ID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendrePlDerivArray
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreQ0
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreQ0
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreQ1
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreQ1
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreQl
 * Signature: (ID)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreQl
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreDerivArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreDerivArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreDerivAltArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreDerivAltArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreDeriv2Array
 * Signature: (IIDD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreDeriv2Array
  (JNIEnv *, jclass, jint, jint, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreDeriv2AltArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreDeriv2AltArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreArrayN
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreArrayN
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreArrayIndex
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreArrayIndex
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendrePlm
 * Signature: (IID)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendrePlm
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreSphPlm
 * Signature: (IID)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreSphPlm
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendrePlmArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendrePlmArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreSphPlmArray
 * Signature: (IID)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreSphPlmArray
  (JNIEnv *, jclass, jint, jint, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalPhalf
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalPhalf
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalPmhalf
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalPmhalf
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalP0
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalP0
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalP1
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalP1
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalPsphReg
 * Signature: (IDD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalPsphReg
  (JNIEnv *, jclass, jint, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    conicalPcylReg
 * Signature: (IDD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_conicalPcylReg
  (JNIEnv *, jclass, jint, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreH3d0
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreH3d0
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreH3d1
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreH3d1
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreH3d
 * Signature: (IDD)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreH3d
  (JNIEnv *, jclass, jint, jdouble, jdouble);

/*
 * Class:     org_gsl4j_polynom_LegendrePolynom
 * Method:    legendreH3dArray
 * Signature: (IDD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_polynom_LegendrePolynom_legendreH3dArray
  (JNIEnv *, jclass, jint, jdouble, jdouble);

#ifdef __cplusplus
}
#endif
#endif
