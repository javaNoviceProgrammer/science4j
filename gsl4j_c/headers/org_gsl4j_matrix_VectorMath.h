/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_gsl4j_matrix_VectorMath */

#ifndef _Included_org_gsl4j_matrix_VectorMath
#define _Included_org_gsl4j_matrix_VectorMath
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    get
 * Signature: ([DI)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_matrix_VectorMath_get
  (JNIEnv *, jclass, jdoubleArray, jint);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    set
 * Signature: ([DID)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_set
  (JNIEnv *, jclass, jdoubleArray, jint, jdouble);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    setAll
 * Signature: ([DD)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_setAll
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    setZero
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_setZero
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    setBasis
 * Signature: ([DI)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_setBasis
  (JNIEnv *, jclass, jdoubleArray, jint);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    subVector
 * Signature: ([DII)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_subVector
  (JNIEnv *, jclass, jdoubleArray, jint, jint);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    subVectorWithStride
 * Signature: ([DIII)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_subVectorWithStride
  (JNIEnv *, jclass, jdoubleArray, jint, jint, jint);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    memcpy
 * Signature: ([D[D)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_memcpy
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    swap
 * Signature: ([D[D)V
 */
JNIEXPORT void JNICALL Java_org_gsl4j_matrix_VectorMath_swap
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    swapElements
 * Signature: ([DII)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_swapElements
  (JNIEnv *, jclass, jdoubleArray, jint, jint);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    reverse
 * Signature: ([D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_reverse
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    add
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_add
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    sub
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_sub
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    mul
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_mul
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    div
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_div
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    scale
 * Signature: ([DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_scale
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    addConstant
 * Signature: ([DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_addConstant
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    axpby
 * Signature: (D[DD[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_axpby
  (JNIEnv *, jclass, jdouble, jdoubleArray, jdouble, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    max
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_matrix_VectorMath_max
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    min
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_org_gsl4j_matrix_VectorMath_min
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    minmax
 * Signature: ([D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_gsl4j_matrix_VectorMath_minmax
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    maxIndex
 * Signature: ([D)I
 */
JNIEXPORT jint JNICALL Java_org_gsl4j_matrix_VectorMath_maxIndex
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    minIndex
 * Signature: ([D)I
 */
JNIEXPORT jint JNICALL Java_org_gsl4j_matrix_VectorMath_minIndex
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    minmaxIndex
 * Signature: ([D)[I
 */
JNIEXPORT jintArray JNICALL Java_org_gsl4j_matrix_VectorMath_minmaxIndex
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    isZero
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_org_gsl4j_matrix_VectorMath_isZero
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    isPositive
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_org_gsl4j_matrix_VectorMath_isPositive
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    isNegative
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_org_gsl4j_matrix_VectorMath_isNegative
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    isNonNegative
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_org_gsl4j_matrix_VectorMath_isNonNegative
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     org_gsl4j_matrix_VectorMath
 * Method:    equal
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_org_gsl4j_matrix_VectorMath_equal
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
